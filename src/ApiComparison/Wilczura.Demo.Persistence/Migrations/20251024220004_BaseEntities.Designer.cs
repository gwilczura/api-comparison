// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wilczura.Demo.Persistence;

#nullable disable

namespace Wilczura.Demo.Persistence.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    [Migration("20251024220004_BaseEntities")]
    partial class BaseEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("demo")
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "citext");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wilczura.Demo.Persistence.Models.CompanyLocation", b =>
                {
                    b.Property<long>("CompanyLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("company_location_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CompanyLocationId"));

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint")
                        .HasColumnName("country_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("citext")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("citext")
                        .HasColumnName("name");

                    b.HasKey("CompanyLocationId")
                        .HasName("pk_company_locations");

                    b.HasIndex("CountryId")
                        .HasDatabaseName("ix_company_locations_country_id");

                    b.ToTable("company_locations", "demo");
                });

            modelBuilder.Entity("Wilczura.Demo.Persistence.Models.Country", b =>
                {
                    b.Property<long>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("country_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CountryId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("citext")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("citext")
                        .HasColumnName("name");

                    b.HasKey("CountryId")
                        .HasName("pk_countries");

                    b.ToTable("countries", "demo");
                });

            modelBuilder.Entity("Wilczura.Demo.Persistence.Models.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("employee_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("EmployeeId"));

                    b.Property<long?>("CompanyLocationId")
                        .HasColumnType("bigint")
                        .HasColumnName("company_location_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("citext")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("citext")
                        .HasColumnName("name");

                    b.HasKey("EmployeeId")
                        .HasName("pk_employees");

                    b.HasIndex("CompanyLocationId")
                        .HasDatabaseName("ix_employees_company_location_id");

                    b.ToTable("employees", "demo");
                });

            modelBuilder.Entity("Wilczura.Demo.Persistence.Models.CompanyLocation", b =>
                {
                    b.HasOne("Wilczura.Demo.Persistence.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_company_locations_countries_country_id");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Wilczura.Demo.Persistence.Models.Employee", b =>
                {
                    b.HasOne("Wilczura.Demo.Persistence.Models.CompanyLocation", "CompanyLocation")
                        .WithMany()
                        .HasForeignKey("CompanyLocationId")
                        .HasConstraintName("fk_employees_company_locations_company_location_id");

                    b.Navigation("CompanyLocation");
                });
#pragma warning restore 612, 618
        }
    }
}
